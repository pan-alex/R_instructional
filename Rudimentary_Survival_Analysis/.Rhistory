id = seq(1, n),
sex = sample(c(1, 0), n, replace = T),    # 1 is Male
date_of_birth = dob_text,
age_continuous = sample_age,
treatment_arm = sample(c(1, 0), n, replace = T),    # 1 is Cooticure
trial_entrance = sample(
seq(as.Date('2010-01-01'), as.Date('2012-12-30'),
by = 'day'), n)
)
# Generate survival in days
# Survival is a function of treatment arm, age, and sex, based on a logistic
# function
# A portion of samples are also tagged as being censored to simulate dropouts
modifier <- (0.2 * cooties$age_continuous
+ 1.0 * cooties$sex
- 3.0 * cooties$treatment_arm
+ 0.05 * cooties$age_continuous*cooties$treatment_arm)
s <- rnorm(n, mean = modifier, sd = abs(mean(modifier) / 2))
prob_of_death <- 1 / (1 + exp(-s))
cooties <- cooties %>%
mutate(death = runif(n, 0, 1) < prob_of_death,
trial_exit = trial_entrance + as.integer(abs(rnorm(n, mean = 1095, sd = 800))),
trial_exit = if_else(trial_exit > min(trial_exit) + 1826,    # 5 years
min(trial_exit) + 1826, trial_exit)) %>%
select(-age_continuous)
write_csv(cooties, 'cooties_data.csv')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, results = 'hold')
options(width = 200)
library(tidyverse)    # Functions to help with data manipulation
library(lubridate)    # Functions to help handle dates
library(survival)    # Statistical package for analyzing survival data
library(rms)
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties[1:10, ]
filter(cooties, sex == 1, treatment_arm == 0)
select(cooties, id, sex, date_of_birth)
select(cooties, -treatment_arm, -trial_entrance, -death, -trial_exit)
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
mutate(cooties, sex = ifelse(sex == 1, 'Male', 'Female'))
# Note:
# The `ifelse()` function checks each observation to see if it meets a
# condition. Here the condition is that `sex == 1`
# IF it is True: It will return the value 'Male'.
# ELSE (i.e., it is False): It will return the value 'Female'
# If your function is very long, it is easier to read if you separate each
# argument onto a separate line
separate(cooties,
col = date_of_birth,
into = c('dob_month', 'dob_day', 'dob_year'),
sep = ' ',    # The 'separator' is a space (as in spacebar)
remove = TRUE)    # remove = TRUE will remove the original variable
# Note:
# `c()` means 'concatenate'; it is how you attach multiple objects together as
# a single object. Try: 1 + c(1, 2, 3)
# Note the manipulations I am doing in these snippets are useless; it is just to illustrate the point
cooties %>%
filter(death == TRUE) %>%
select(-sex) %>%
mutate(treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
mutate(
select(
filter(cooties, death == TRUE),
-sex),
treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
dim(cooties)
mean(cooties$sex)
# Since sex is a binary variable (1 being male, 0 being female), we can quickly
# calculate the proportion of males by taking the mean. Here it is about 50%.
summary(cooties$days_in_trial)
hist(cooties$days_in_trial)
boxplot(cooties$days_in_trial ~ cooties$sex)
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$treatment_arm == 1, 'Cooticure', 'Placebo')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(npsurv(survival ~ predictor), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$sex == 1, 'Male', 'Female')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(cph(survival ~ predictor, surv = TRUE), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
cooties$days_in_trial
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties$trial_exit - cooties$trial_entrance
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties[1:10, ]
filter(cooties, sex == 1, treatment_arm == 0)
select(cooties, id, sex, date_of_birth)
select(cooties, -treatment_arm, -trial_entrance, -death, -trial_exit)
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
mutate(cooties, sex = ifelse(sex == 1, 'Male', 'Female'))
# Note:
# The `ifelse()` function checks each observation to see if it meets a
# condition. Here the condition is that `sex == 1`
# IF it is True: It will return the value 'Male'.
# ELSE (i.e., it is False): It will return the value 'Female'
# If your function is very long, it is easier to read if you separate each
# argument onto a separate line
separate(cooties,
col = date_of_birth,
into = c('dob_month', 'dob_day', 'dob_year'),
sep = ' ',    # The 'separator' is a space (as in spacebar)
remove = TRUE)    # remove = TRUE will remove the original variable
# Note:
# `c()` means 'concatenate'; it is how you attach multiple objects together as
# a single object. Try: 1 + c(1, 2, 3)
# Note the manipulations I am doing in these snippets are useless; it is just to illustrate the point
cooties %>%
filter(death == TRUE) %>%
select(-sex) %>%
mutate(treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
mutate(
select(
filter(cooties, death == TRUE),
-sex),
treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
dim(cooties)
mean(cooties$sex)
# Since sex is a binary variable (1 being male, 0 being female), we can quickly
# calculate the proportion of males by taking the mean. Here it is about 50%.
summary(cooties$days_in_trial)
hist(cooties$days_in_trial)
boxplot(cooties$days_in_trial ~ cooties$sex)
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$treatment_arm == 1, 'Cooticure', 'Placebo')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(npsurv(survival ~ predictor), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$sex == 1, 'Male', 'Female')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(cph(survival ~ predictor, surv = TRUE), label.curves = list(keys='lines'))
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
summary(cooties$trial_exit)
getwd()
setwd('R/R_instructional/rudimentary survival analysis')
setwd('R/R_instructional/rudimentary_survival_analysis')
# This is the data generation script for the exercise in analyzing cooties survival.
library(tidyverse)
library(lubridate)
set.seed(1)
n <- 1000
# Generate birthdates in a skewed distribution
# (Birthdates are being used instead of age for the sake of inconvenience--
# it is an exercise to convert birthdays to age.
trial_entrance = sample(
seq(as.Date('2010-01-01'), as.Date('2012-12-30'),
by = 'day'), n)
sample_age <- rpois(n, 8)
dob_year <- as.integer(year(trial_entrance) - sample_age)
dob_month_text <- sample(month.name, n, replace = T)
dob_text <- paste(dob_month_text, dob_day, dob_year, sep = ' ')
dob_day_num <- sample(seq(1, 28), n, replace = T)
dob_month_num <- match(dob_month_text, month.name)
dob <- paste(dob_month_num, dob_day_num, dob_year, sep = '/')
# Generate data
cooties <- data.frame(
id = seq(1, n),
sex = sample(c(1, 0), n, replace = T),    # 1 is Male
date_of_birth = dob_text,
age_continuous = sample_age,
treatment_arm = sample(c(1, 0), n, replace = T),    # 1 is Cooticure
trial_entrance = sample(
seq(as.Date('2010-01-01'), as.Date('2012-12-30'),
by = 'day'), n)
)
# Generate survival in days
# Survival is a function of treatment arm, age, and sex, based on a logistic
# function
# A portion of samples are also tagged as being censored to simulate dropouts
modifier <- (0.2 * cooties$age_continuous
+ 1.0 * cooties$sex
- 3.0 * cooties$treatment_arm
+ 0.05 * cooties$age_continuous*cooties$treatment_arm)
s <- rnorm(n, mean = modifier, sd = abs(mean(modifier) / 2))
prob_of_death <- 1 / (1 + exp(-s))
cooties <- cooties %>%
mutate(death = runif(n, 0, 1) < prob_of_death,
trial_exit = trial_entrance + as.integer(abs(rnorm(n, mean = 1095, sd = 800))),
trial_exit = if_else(trial_exit > min(trial_exit) + 1826,    # 5 years
min(trial_exit) + 1826, trial_exit)) %>%
select(-age_continuous)
write_csv(cooties, 'cooties_data.csv')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, results = 'hold')
options(width = 200)
library(tidyverse)    # Functions to help with data manipulation
library(lubridate)    # Functions to help handle dates
library(survival)    # Statistical package for analyzing survival data
library(rms)
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties[1:10, ]
filter(cooties, sex == 1, treatment_arm == 0)
select(cooties, id, sex, date_of_birth)
select(cooties, -treatment_arm, -trial_entrance, -death, -trial_exit)
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
mutate(cooties, sex = ifelse(sex == 1, 'Male', 'Female'))
# Note:
# The `ifelse()` function checks each observation to see if it meets a
# condition. Here the condition is that `sex == 1`
# IF it is True: It will return the value 'Male'.
# ELSE (i.e., it is False): It will return the value 'Female'
# If your function is very long, it is easier to read if you separate each
# argument onto a separate line
separate(cooties,
col = date_of_birth,
into = c('dob_month', 'dob_day', 'dob_year'),
sep = ' ',    # The 'separator' is a space (as in spacebar)
remove = TRUE)    # remove = TRUE will remove the original variable
# Note:
# `c()` means 'concatenate'; it is how you attach multiple objects together as
# a single object. Try: 1 + c(1, 2, 3)
# Note the manipulations I am doing in these snippets are useless; it is just to illustrate the point
cooties %>%
filter(death == TRUE) %>%
select(-sex) %>%
mutate(treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
mutate(
select(
filter(cooties, death == TRUE),
-sex),
treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
dim(cooties)
mean(cooties$sex)
# Since sex is a binary variable (1 being male, 0 being female), we can quickly
# calculate the proportion of males by taking the mean. Here it is about 50%.
summary(cooties$days_in_trial)
hist(cooties$days_in_trial)
boxplot(cooties$days_in_trial ~ cooties$sex)
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$treatment_arm == 1, 'Cooticure', 'Placebo')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(npsurv(survival ~ predictor), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$sex == 1, 'Male', 'Female')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(cph(survival ~ predictor, surv = TRUE), label.curves = list(keys='lines'))
365.24 * 4
source('~/R/R_Instructional/Rudimentary_Survival_Analysis/cooties_data_generation.R', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, results = 'hold')
options(width = 200)
library(tidyverse)    # Functions to help with data manipulation
library(lubridate)    # Functions to help handle dates
library(survival)    # Statistical package for analyzing survival data
library(rms)
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties[1:10, ]
filter(cooties, sex == 1, treatment_arm == 0)
select(cooties, id, sex, date_of_birth)
select(cooties, -treatment_arm, -trial_entrance, -death, -trial_exit)
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
mutate(cooties, sex = ifelse(sex == 1, 'Male', 'Female'))
# Note:
# The `ifelse()` function checks each observation to see if it meets a
# condition. Here the condition is that `sex == 1`
# IF it is True: It will return the value 'Male'.
# ELSE (i.e., it is False): It will return the value 'Female'
# If your function is very long, it is easier to read if you separate each
# argument onto a separate line
separate(cooties,
col = date_of_birth,
into = c('dob_month', 'dob_day', 'dob_year'),
sep = ' ',    # The 'separator' is a space (as in spacebar)
remove = TRUE)    # remove = TRUE will remove the original variable
# Note:
# `c()` means 'concatenate'; it is how you attach multiple objects together as
# a single object. Try: 1 + c(1, 2, 3)
# Note the manipulations I am doing in these snippets are useless; it is just to illustrate the point
cooties %>%
filter(death == TRUE) %>%
select(-sex) %>%
mutate(treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
mutate(
select(
filter(cooties, death == TRUE),
-sex),
treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
dim(cooties)
mean(cooties$sex)
# Since sex is a binary variable (1 being male, 0 being female), we can quickly
# calculate the proportion of males by taking the mean. Here it is about 50%.
summary(cooties$days_in_trial)
hist(cooties$days_in_trial)
boxplot(cooties$days_in_trial ~ cooties$sex)
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$treatment_arm == 1, 'Cooticure', 'Placebo')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(npsurv(survival ~ predictor), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$sex == 1, 'Male', 'Female')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(cph(survival ~ predictor, surv = TRUE), label.curves = list(keys='lines'))
# This is the data generation script for the exercise in analyzing cooties survival.
library(tidyverse)
library(lubridate)
set.seed(1)
n <- 1000
# Generate birthdates in a skewed distribution
# (Birthdates are being used instead of age for the sake of inconvenience--
# it is an exercise to convert birthdays to age.
trial_entrance = sample(
seq(as.Date('2010-01-01'), as.Date('2012-12-30'),
by = 'day'), n)
sample_age <- rpois(n, 8)
dob_year <- as.integer(year(trial_entrance) - sample_age)
dob_month_text <- sample(month.name, n, replace = T)
dob_text <- paste(dob_month_text, dob_day, dob_year, sep = ' ')
dob_day_num <- sample(seq(1, 28), n, replace = T)
dob_month_num <- match(dob_month_text, month.name)
dob <- paste(dob_month_num, dob_day_num, dob_year, sep = '/')
# Generate data
cooties <- data.frame(
id = seq(1, n),
sex = sample(c(1, 0), n, replace = T),    # 1 is Male
date_of_birth = dob_text,
age_continuous = sample_age,
treatment_arm = sample(c(1, 0), n, replace = T),    # 1 is Cooticure
trial_entrance = sample(
seq(as.Date('2010-01-01'), as.Date('2012-12-30'),
by = 'day'), n)
)
# Generate survival in days
# Survival is a function of treatment arm, age, and sex, based on a logistic
# function
# A portion of samples are also tagged as being censored to simulate dropouts
modifier <- (0.2 * cooties$age_continuous
+ 1.0 * cooties$sex
- 3.0 * cooties$treatment_arm
+ 0.05 * cooties$age_continuous*cooties$treatment_arm)
s <- rnorm(n, mean = modifier, sd = abs(mean(modifier) / 2))
prob_of_death <- 1 / (1 + exp(-s))
cooties <- cooties %>%
mutate(death = runif(n, 0, 1) < prob_of_death,
trial_exit = trial_entrance + as.integer(abs(rnorm(n, mean = 1095, sd = 800))),
trial_exit = if_else(trial_exit > min(trial_exit) + 1826,    # 5 years
min(trial_exit) + 1826, trial_exit)) %>%
select(-age_continuous)
write_csv(cooties, 'cooties_data.csv')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, results = 'hold')
options(width = 200)
library(tidyverse)    # Functions to help with data manipulation
library(lubridate)    # Functions to help handle dates
library(survival)    # Statistical package for analyzing survival data
library(rms)
# When we begin a line with a '#', it means that we are writing a comment.
# Comments are only to communicate to other humans; they are ignored by the program!
cooties <- read_csv('cooties_data.csv')
cooties[1:10, ]
filter(cooties, sex == 1, treatment_arm == 0)
select(cooties, id, sex, date_of_birth)
select(cooties, -treatment_arm, -trial_entrance, -death, -trial_exit)
cooties <- mutate(cooties, days_in_trial = as.numeric(trial_exit - trial_entrance))
cooties
mutate(cooties, sex = ifelse(sex == 1, 'Male', 'Female'))
# Note:
# The `ifelse()` function checks each observation to see if it meets a
# condition. Here the condition is that `sex == 1`
# IF it is True: It will return the value 'Male'.
# ELSE (i.e., it is False): It will return the value 'Female'
# If your function is very long, it is easier to read if you separate each
# argument onto a separate line
separate(cooties,
col = date_of_birth,
into = c('dob_month', 'dob_day', 'dob_year'),
sep = ' ',    # The 'separator' is a space (as in spacebar)
remove = TRUE)    # remove = TRUE will remove the original variable
# Note:
# `c()` means 'concatenate'; it is how you attach multiple objects together as
# a single object. Try: 1 + c(1, 2, 3)
# Note the manipulations I am doing in these snippets are useless; it is just to illustrate the point
cooties %>%
filter(death == TRUE) %>%
select(-sex) %>%
mutate(treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
mutate(
select(
filter(cooties, death == TRUE),
-sex),
treatment_arm = ifelse(treatment_arm == 1, 'Cooticure', 'Placebo'))
dim(cooties)
mean(cooties$sex)
# Since sex is a binary variable (1 being male, 0 being female), we can quickly
# calculate the proportion of males by taking the mean. Here it is about 50%.
summary(cooties$days_in_trial)
hist(cooties$days_in_trial)
boxplot(cooties$days_in_trial ~ cooties$sex)
survival <- Surv(time = cooties$days_in_trial / 365.25,
event = cooties$death)
survplot(npsurv(survival ~ 1),
label.curves = list(keys='lines'),
n.risk = T,
conf = 'none',
xlab = 'Years')
title('Survival across the entire trial')
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$treatment_arm == 1, 'Cooticure', 'Placebo')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(npsurv(survival ~ predictor), label.curves = list(keys='lines'))
survival <- Surv(time = cooties$days_in_trial, event = cooties$death)
predictor <- ifelse(cooties$sex == 1, 'Male', 'Female')
dd <- datadist(predictor)    # You don't need to understand this
options(datadist = 'dd')    # You don't need to understand this
survplot(cph(survival ~ predictor, surv = TRUE), label.curves = list(keys='lines'))
knitr::opts_chunk$set(comment = NA, message = FALSE, warning = FALSE)
options(digits = 4)
filepath <- "../Data/creditcard.csv"
# Note: These data are pretty large (300,000 obs).
credit <- read.csv(filepath)
credit$Class <- as.factor(credit$Class)
summary(credit$Class)    # Only 0.2% (492) of the entries are actual fraud!
str(credit)
ColSums(is.na(credit))    # This evaluates much faster than missmap for large data sets.
ColSum(is.na(credit))
colSums(is.na(credit))
set.seed(12345)
length(credit)
length(credit[[1]])
train <- sample(nrow(credit), 200000, replace = FALSE)
credit.train <- credit[train, ]
credit.test <- credit[-train, ]
train
nrow(credit)
1:nrow(credit)[-train]
(1:nrow(credit))[-train]
(1:nrow(credit))
(1:nrow(credit))[-train]
m <- nrow(credit)
train_mask <- sample(m, m * 0.7, replace = FALSE)
train_mask
dev_mask <- sample(1:m[-train], m * 0.15, replace = FALSE)
train_mask <- sample(m, m * 0.7, replace = FALSE)
dev_mask <- sample(1:m[-train_mask], m * 0.15, replace = FALSE)
train_mask <- sample(m, m * 0.7, replace = FALSE)
dev_mask <- sample(1:m[-train_mask], m * 0.15, replace = FALSE)
train_mask
1:m[-train_mask]
(1:m)[-train_mask]
train_mask <- sample(m, m * 0.7, replace = FALSE)
dev_mask <- sample((1:m)[-train_mask], m * 0.15, replace = FALSE)
table(train_mask %in% dev_mask)
table(dev_mask %in% train_mask)
m <- nrow(credit)
train_mask <- sample(m, m * 0.7)
dev_mask <- sample((1:m)[-train_mask], m * 0.15)
credit_train <- credit[train_mask, ]
credit_dev <- credit[dev_mask, ]
credit_test <- credit[-dev_mask, ]
summary(credit.train$Class)
summary(credit_train$Class)
fit.controls <- trainControl(method = "repeatedcv",    # Bootstrapped CV
number = 10,    # 10-fold CV
repeats = 3)    # Repeat 10fCV 3 times
